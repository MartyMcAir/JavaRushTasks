package com.javarush.task.task15.task1517;

/* 
Статики и исключения
*/

public class Solution {
    public static int A = 0;

    // Суть как я понял  в том что любое RunTime исключение (непроверенное исключение) в
    // статическом блоке оборачивается  в ExceptionInInitializerError,  т.к.
    // неинициализированный класс достаточно серьезная проблема, которую разработчику
    // сложно будет обработать и исправить (предназначение Error)

    // Получается при возникновении ошибки в статическом блоке мы не сможем узнать
    // точное название ошибки, лишь после обработки или пошаговой проверке сможем узнать.

    // Может кому то поможет. Как я понял в статическом блоке выкидывать исключения можно
    // (проверенные) сделать это можно либо обманув компилятор условием(if) , либо используя
    // try {} cath() {} , Выпускать из статического блока исключения нельзя , так как
    // это полностью поломает класс и все то, что использует наш  класс .  Так как JVM
    // запускает статический блок при первом же обращении к классу при инициализации полей .
    // И если блок выбрасывает непроверенное исключение JVM оборачивает его в error, и
    // отловить далее данное исключение практически не реально, а класс помечает
    // как filed что делает невозможным использование данного класса.
    static {
        //throw an exception here - выбросьте эксепшн тут
//        if(A != 5) {
//            throw new ExceptionInInitializerError();
//        }
        if (true)throw new RuntimeException(); // ExceptionInInitializerError
    }

    public static int B = 5;

    public static void main(String[] args) {
        System.out.println(B);
    }
}
