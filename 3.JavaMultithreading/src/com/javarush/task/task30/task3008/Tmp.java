package com.javarush.task.task30.task3008;

// Чат (3)
//Прежде, чем двигаться дальше, нужно разработать протокол общения клиента и сервера.
//
//Сформулируем основные моменты протокола:
//- Когда новый клиент хочет подсоединиться к серверу, сервер должен запросить имя клиента.
//- Когда клиент получает запрос имени от сервера он должен отправить свое имя серверу.
//- Когда сервер получает имя клиента он должен принять это имя или запросить новое.
//- Когда новый клиент добавился к чату, сервер должен сообщить остальным участникам о новом клиенте.
//- Когда клиент покидает чат, сервер должен сообщить остальным участникам об этом.
//- Когда сервер получает текстовое сообщение от клиента, он должен переслать его всем остальным участникам чата.

// Чат (4)
//Сообщение Message - это данные, которые одна сторона отправляет, а вторая принимает.
//Каждое сообщение должно иметь тип MessageType, а некоторые и дополнительные данные, например,
// текстовое сообщение должно содержать текст.
//Т.к. сообщения будут создаваться в одной программе, а читаться в другой,
// удобно воспользоваться механизмом сериализации для перевода класса в последовательность битов и наоборот.

// Чат (5)
//Клиент и сервер будут общаться через сокетное соединение.
//Одна сторона будет записывать данные в сокет, а другая читать.
//Их общение представляет собой обмен сообщениями Message.
//Класс Connection будет выполнять роль обертки над классом java.net.Socket,
//которая должна будет уметь сериализовать и десериализовать объекты типа Message в сокет.
//Методы этого класса должны быть готовы к вызову из разных потоков.

// Чат (6)
//Приступим к самому важному - написанию класса Server.
//Сервер должен поддерживать множество соединений с разными клиентами одновременно.
//Это можно реализовать с помощью следующего алгоритма:
//
//- Сервер создает серверное сокетное соединение.
//- В цикле ожидает, когда какой-то клиент подключится к сокету.
//- Создает новый поток обработчик Handler, в котором будет происходить обмен сообщениями с клиентом.
//- Ожидает следующее соединение.
public class Tmp {
}
